// -- TAKE FIRST INPUT--
FST, SKI
    BUN FST
    CLA
    INP
    STA ONEASCII
    OUT

// -- TAKE SECOND INPUT --
SCD, SKI
    BUN SCD
    CLA
    INP
    STA TWOASCII
    OUT

// -- CHECK FIRST IF LESS THAN 58
LDA ONEASCII
SUB HBOUND
SPA
BUN LBONE
BUN FLET

// -- WAS LESS THAN 58 CHECK GREATER THAN 47
LBONE, SKI
    LDA ONEASCII
    SUB LBOUND
    SNA
    BUN FNUM
    BUN FLET

// -- FIRST IS LETTER (A-F)
FLET, SKI
    LDA ONEASCII
    SUB LETTODEC
    STA ONEDEC
    BUN SCHK

// -- FIRST IS NUMBER (0-1)
FNUM, SKI
    LDA ONEASCII
    SUB DECTODEC
    STA ONEDEC
    BUN SCHK

// -- CHECK SECOND IF LESS THAN 58
SCHK, SKI
    LDA TWOASCII
    SUB HBOUND
    SPA
    BUN LBTWO
    BUN SLET

// -- WAS LESS THAN 58 CHECK GREATER THAN 47
LBTWO, SKI
    LDA TWOASCII
    SUB LBOUND
    SNA
    BUN FNUM
    BUN FLET

// -- SECOND IS LETTER (A-F)
SLET, SKI
    LDA TWOASCII
    SUB LETTODEC
    STA ONEDEC
    BUN ADDER

// -- SECOND IS NUMBER (0-1)
SNUM, SKI
    LDA TWOASCII
    SUB DECTODEC
    STA TWODEC
    BUN ADDER

// -- CONVERT THIS DEC REP OF HEX TO DEC
ADDER, SKI
    LDA ONEASCII
    STA DECINP
    MULSTART, SKI
    LDA MULCOUNT
    SUB SIXTEEN
    SNA
    BUN LARGEST
    BUN MULBODY
    MULBACK, SKI
    LDA MULCOUNT
    ADD ONE
    STA MULCOUNT
    BUN MULSTART

// -- MUL LOOP BODY
MULBODY, SKI
    LDA DECINP
    ADD TWOASCII
    STA DECINP
    BUN MULBACK

// -- FINDING LARGEST NUM
LARGEST, SKI
    LDA DECINP
    SPA
    BUN ENDISHERE
    LDA DECINP
    STA DIVIDEND
    LDA ZERO
    STA QUOTIENT

    BACKDIV, SKI

    LDA DIVIDEND
    STA CURRDEC

    SUB LARGESTDEC
    SNA
    BUN CURRLARGER

    BACKLARGER, SKI
    
    LDA QUOTIENT
    STA DECINP
    BUN LARGEST

// -- DIVIDEND LOOP
DIVLOOP, SKI
    LDA DIVIDEND
    SUB NINE
    SPA
    BUN BACKDIV
    LDA DIVIDEND
    SUB TEN
    STA DIVIDEND
    LDA QUOTIENT
    ADD ONE
    STA QUOTIENT

// -- CURRENT DIGIT IS LARGER THAN STORED
CURRLARGER, SKI
    LDA CURRDEC
    STA LARGEST
    BUN BACKLARGER

ENDISHERE, SKI
    LDA LARGEST
    ADD DECTODEC
    OUT

// -- VARIABLES --
// INPUT ASCII
ONEASCII, DEC 0
TWOASCII, DEC 0

// INPUT DECIMAL (OF HEX)
ONEDEC, DEC 0
TWODEC, DEC 0

// INPUT DECIMAL
DECINP, DEC 0

// COMPARITORS FROM ASCII
HBOUND, DEC 58
LBOUND, DEC 47

// CONVERTERS FROM ASCII
DECTODEC, DEC 48
LETTODEC, DEC 55

// LARGEST DIGIT STORAGE
LARGESTDEC, DEC 0

// LOOPERS
SIXTEEN, DEC 16
MULCOUNT, DEC 0
ONE, DEC 1

// MORE LOOPERS
TEN, DEC 10
NINE, DEC 10
DIVIDEND, DEC 0
QUOTIENT, DEC 0

CURRDEC, DEC 0

// RANDOMS
ZERO, DEC 0

// -- END OF CODE --
END
